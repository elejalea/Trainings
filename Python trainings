# wakari, cocalc, trinket

print(42%8, 42//8)
Output: 2 5
_______________________________________________________________
# Найти на что оканчивается число
print(239 % 10)
Output: 9
_______________________________________________________________
# Сумма цифр трёхзначного числа
n = int(input('Введите трёхзначное число: '))
a = n//100
b = (n - (a*100))//10
c = n%10
print(a+b+c)
_______________________________________________________________
# Округление вниз
print(round(5/2))
print(-9//4)
_______________________________________________________________
print(ord("a"))
print(chr(97))
OUT: 97 a
_______________________________________________________________
print(type(7))
Output: <class 'int'>
_______________________________________________________________
# ID в памяти
my_num = []
for n in range(5):
    print(id(my_num))
OUT: 
1726833779272
1726833779272
1726833779272
1726833779272
1726833779272
_______________________________________________________________
name = input('Enter your name: ')
print('Hello', name)
Output: Hello Karina
_______________________________________________________________
x = int(input())
if x % 2 == 0:
    print('Четное')
else:
    print('Нечетное')
_______________________________________________________________
# Проверка условий. Тернарные операторы.
print('Совершеннолетний') if int(input()) > 18 else print('Несовершеннолетний')
_______________________________________________________________
a = '''multiple lines
string'''
print(a)
Output: 
multiple lines
string
_______________________________________________________________
print(1,'\n'*2,2)
Output: 
1


2
_______________________________________________________________
print('1\n2')
Output:
1
2
_______________________________________________________________
print('21','10','2018',sep='-', end='.')
Output: 21-10-2018.
_______________________________________________________________
a = 5
while a > 0:
    print(a, end=' ')
    a -= 1
Output: 5 4 3 2 1 
________________________________
Вывести все нечетные числа от 5 до 55
a = 5
while a <= 55:
  if a % 2 == 1:
    print(a, end=' ')
  a += 1
________________________________________________________________
txt = 'abc abc abc'
print(txt.split())
Output: ['abc', 'abc', 'abc']
________________________________________________________________
a, b = input().split()
print(int(a)/int(b))

a, b = (int(i) for i in input().split())
print(a/b)
Output: 10 5
2.0
________________________________________________________________
text = input()
cnt = 0
for i in text:
    if i == 'a':
        cnt += 1
print(cnt)

text = input()
print(text.count('a'))
Output: ababa
3
________________________________________________________________
for i in range(2,10):
    print(i, end=' ')
Output: 2 3 4 5 6 7 8 9 
________________________________________________________________
for i in range(2,10,2):
    print(i, end=' ')
Output: 2 4 6 8 
________________________________________________________________
# Вложенный цикл
n = int(input())
m = int(input())
for i in range(n):
    for j in range(m):
        print('*', end='')
    print()
Output:
4
6
******
******
******
****** 
________________________________________________________________
test = 'совершить'
print(test[0],test[0:6],test[:6],test[2:6],sep='|')
Output: с|соверш|соверш|верш
________________________________________________________________
test = [1,2,3,4,5,6,7,8,9,10]
print(test[0:5],test[:5])
print(test[5:11],test[5:])
Output:
[1, 2, 3, 4, 5] [1, 2, 3, 4, 5] 
[6, 7, 8, 9, 10] [6, 7, 8, 9, 10]
________________________________________________________________
text = 'Ёж ел ёлку'
newtext = text.replace('Ё','Е')
newtext = newtext.replace('ё','е')
print(newtext)
Output: Еж ел елку
________________________________________________________________
text = 'ababa'
i = input()
if i in text:
  print(True)
else:
  print(False)
Output: n
False
________________________________________________________________
s = 'abcda'
print(s.find('a'))
print(s.find('e'))
Output: 0
-1
________________________________________________________________
list = ['A', 'B', 'C']
list[0] = 'Z'
print(list)
Output: ['Z', 'B', 'C']
________________________________________________________________
list = ['A', 'B', 'C']
list += ['Y','Z']
list.append('Z') # один аргумент
list.extend(['Y','Z'])
print(list)
Output: ['A', 'B', 'C', 'Y', 'Z']
________________________________________________________________
list = ['A', 'B', 'C', 'Z']
list.insert(-2,'Y')
print(list)
Output: ['A', 'B', 'Y', 'C', 'Z']
________________________________________________________________
list = ['A', 'B', 'C', 'Z']
list.remove('Z')
del list[-1]
print(list)
Output: ['A', 'B', 'C']
________________________________________________________________
list = ['A', 'B', 'C', 'Z']
print(list.index('C'))
Output: 2
________________________________________________________________
list = ['Y', 'C', 'Z', 'B']
print(sorted(list))

list = ['Y', 'C', 'Z', 'B']
sorted(list)
print(list)
Output: ['B', 'C', 'Y', 'Z']
________________________________________________________________
list = ['A', 'B', 'C', 'D']
list.reverse()
print(list)
Output: ['D', 'C', 'B', 'A']
________________________________________________________________
# Генерирование списка
a = [i for i in range(5)]
print(a)
Otput: [0, 1, 2, 3, 4, 5]
_________________________________________________________________

a = [0 for i in range(5)]
print(a)
Output: [0, 0, 0, 0, 0, 0]
_________________________________________________________________

a = [int(i) for i in input().split()]
print(a)
Output: 43, 67, 98
[43, 67, 98] 
________________________________________________________________
# Двумерный список
n = 3
a = [[0] * n] * n
print(a)
a[0][0] = 5
print(a)
Output:
[[0, 0, 0], [0, 0, 0], [0, 0, 0]]
[[5, 0, 0], [5, 0, 0], [5, 0, 0]]
________________________________________________________________
n = 3
a = [[0] * n for i in range(n)]
a[0][0] = 7
print(a)
Output:
[[7, 0, 0], [0, 0, 0], [0, 0, 0]]
________________________________________________________________
#Вложенный список
list = [1,2,[3.1,3.2,3.3],4,5]
print(list[2][2])
OUT: [3.3]
________________________________________________________________
s = ['abc', 'def', 'ghi']
print('|'.join(s))
OUT: abc|def|ghi
________________________________________________________________
def min2(a, b):
    if a <= b:
        return a
    else:
        return b

m = min2(42, 30)
print(min2(min2(42, 30), 25))
Output: 25
________________________________________________________________
s = {'B', 'C', 'C', 'Y', 'Y'}
print(s)
Output: {'B', 'C', 'Y'}
________________________________________________________________
s = {'B', 'C', 'C', 'Y', 'Y'}
print(s)
s.add('A')
print(s)
s.remove('A') / s.discard('A')
print(s)
Output:
{'B', 'C', 'Y'}
{'B', 'C', 'Y', 'A'}
{'B', 'C', 'Y'}
________________________________
d = {'A': '0x41', 'a': '0x61', '.':'0x2e', 0:'0x30'}
print(d.get('.'))
Output: 0x2e
________________________________________________________________
d = {'A': '0x41', 'a': '0x61', '.':'0x2e', 0:'0x30'}
del d['.'] / d.pop('.')
print(d)

Output: {'A': '0x41', 'a': '0x61', 0:'0x30'}
________________________________________________________________
d = {'A': '0x41', 'a': '0x61', '.':'0x2e', 0:'0x30'}
d['.'] / d.pop('.')
print(d)

Output: {'A': '0x41', 'a': '0x61', 0:'0x30'}
________________________________________________________________
d = {'C': 14, 'A': 12, 'T': 9, 'G': 18}
for key, value in d.items():
    print(key, value, end='; ')
Output: C 14; A 12; T 9; G 18; 

for value in d.values():
    print(value, end='; ')
Output: 14; 12; 9; 18; 

for key in d.keys() / in d:
    print(key, end='; ')
Output: C; A; T; G; 
________________________________________________________________
d = {'bat': ['one', 'indef'], 'adierazi': ['state', 'express']}
for value in d.values():
    print(value)
Output: 
['one', 'indef']
['state', 'express']
________________________________________________________________
inf = open('file.txt', 'r')
s1 = inf.readline()
s2 = inf.readline()
inf.close()

with open('text.txt') as inf:
    s1 = inf.readline().strip()
    s2 = inf.readline().strip()
#.strip убирает служебные символы

# Построчное чтение файла
with open('input.txt') as inf:
    for line in inf:
        line = line.strip()
        print(line)
________________________________________________________________
txt = """баргузинский,
каларский,
олёкминский,
тунгирский,
токкинский,"""
words = txt.split()
# for word in words:
#      word = word.strip(,)
#      print(word)

for i,word in enumerate(words):
    word = word.strip(",")
    words[i] = word
    print(word)
________________________________________________________________
while True:
    PRS = input()
    if PRS.endswith('o'):
        print('PRS1SG')
    elif PRS.endswith('as') or PRS.endswith('es'):
        print('PRS2SG')
    elif PRS.endswith('a') or PRS.endswith('e'):
        print('PRS3SG')
    elif PRS.endswith('amos') or PRS.endswith('emos') or PRS.endswith ('imos'):
        print('PRS1Pl')
    elif PRS.endswith('áis') or PRS.endswith('éis') or PRS.endswith('ís'):
        print('PRS2Pl')
    elif PRS.endswith('an') or PRS.endswith('en') or PRS.endswith('en'):
        print('PRS3Pl')
    elif PRS == '':
        break
    else:
        print('invalid form')
________________________________________________________________
inf = open('file.txt', 'w')
inf.write('Some text\n')
inf.write(str(25))
inf.close()

with open('text.txt', 'w') as inf:
    inf.write('Some text\n')
________________________________________________________________
with open('D:\TM_EVN\evn_dict.txt', 'r', encoding='UTF-8') as data:
  with open('C:\Desktop\ki.txt', 'w', encoding='UTF-8') as ki:
    for line in data:
      line = line.strip()
      ki.write(line)
      ki.write('\n')
________________________________________________________________
# Вызов функции из импортированного модуля
import my_module 
my_module.foo()

# Импорт и вызов одной функции из модуля
from my_module import foo
foo()
________________________________________________________________
period = {'earth':1.0, 'jupiter':0.415, 'saturn':44}
period['saturn'] = 0.455
print(period)
Output: {'earth': 1.0, 'jupiter': 0.415, 'saturn': 0.455}
________________________________________________________________
area = [0.14, 4.74, 14.09, 6.13]
for index, x in enumerate(area): 
  print('Room' + str(index+1) + ' -', str(x))
Output:
('Room1 -', '0.14')
('Room2 -', '4.74')
('Room3 -', '14.09')
('Room4 -', '6.13')
________________________________________________________________
BREAK

my_num = 26 
for n in range(101): 
    if n is my_num: 
        print(n, " is found") 
        break 
    else: 
        print(n)
OUT: 0 ... 24 25 26 is found
________________________________________________________________
CONTINUE

my_num = [5, 10, 15] 
for n in range(1, 16): 
    if n in my_num: 
        continue
    print(n)
OUT: 1 2 3 4 6 7 8 9 11 12 13 14 16

# Вывести все чётные, пропуская нечётные 
number = 0
while number <= 100:
    number+=1
    if number%2!=0:
        continue
    print(number)
________________________________________________________________
FUNCTION

# Курс валют
def rub2cur(rub, cur):
    amount = rub / cur 
    print(amount)
    
rub2cur(35000, 74)
OUT: 472.972972973
________________________________________________________________
DEFAULT VALUE FOR ARGUMENTS

def gender(sex='Unknown'):
    if sex is m:
        sex = 'Male'
    elif sex is f:
        sex = 'Female'
    print(sex)

gender(m)
gender(f)
gender()

OUT: Male Female Unknown
________________________________________________________________
LAMBDA

answer = lambda x: x*7 
print(answer(5))
OUT: 35

button(text = "Click me", command=lambda:custom)
________________________________________________________________
# Произвольное число параметров / Flexible number of arguments
def my_function(*args):
________________________________________________________________
# Перевод из десятичной в двоичную
def binary(x):
    s=''
    while x > 0:
        y = x % 2
        s = str(y) + s
# x = целая часть от деления x на 2 
        x //= 2
    return(s)

a = int(input())
print('Binary of', a, 'is', binary(a))
________________________________________________________________
# Range length
print(len(range(1809, 1917)))
OUT: 108
________________________________________________________________
from intertools import chain, zip_longest 
import random 
from string import ascii_letters 
from functools import reduce 

x = list(range(4)) 
y = tuple(random.sample(ascii_letters, 3) 
list(chain(x, y) 
list(chain.from_iterable (x, y) 
OUT: [[0, 1, 2, 3, 4], (I, n, S)] #nested
[0, 1, 2, 3, 4, I, n, S] #unnested

list(zip(x, y))
list(zip_longest(x, y))
list(zip_longest(x, y, fillvalue = 0))
OUT: [(0, 'I'), (1, 'n'), (2, 'S')]
OUT: [(0, 'I'), (1, 'n'), (2, 'S'), (3, None), (4, None)]
________________________________________________________________
